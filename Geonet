from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text('Hello! I am your GeoSpy bot. Use /locate <latitude> <longitude> to get location info.')

async def get_location_info(latitude: float, longitude: float) -> str:
    # Placeholder for actual location info retrieval logic
    # This function is assumed to be async
    return f"Location info for coordinates: ({latitude}, {longitude})"

async def locate(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        latitude = float(context.args[0])
        longitude = float(context.args[1])
        location_info = await get_location_info(latitude, longitude)
        await update.message.reply_text(location_info)
    except (IndexError, ValueError):
        await update.message.reply_text("Please provide both latitude and longitude in the format: /locate <latitude> <longitude>.")
    except Exception as e:
        await update.message.reply_text(f"An error occurred: {str(e)}")

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    print(f"Exception while handling an update: {context.error}")

def main() -> None:
    application = ApplicationBuilder().token('7057443610:AAEHTeVObKBn9Y-7suJpZLDWlMnVMPw4D9I').build()
    
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CommandHandler('locate', locate))
    application.add_error_handler(error_handler)  # Register error handler
    
    application.run_polling()

if __name__ == '__main__':
    main()
